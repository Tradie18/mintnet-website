---
// src/pages/legal/[slug].astro
import { getCollection, type CollectionEntry } from 'astro:content';
import Layout from '../../layouts/Landing.astro';
import Footer from '../../components/Footer.astro';

export async function getStaticPaths() {
  const legalPages = await getCollection('legal', ({ data }) => {
    return data.draft !== true;
  });

  return legalPages.map((page) => ({
    params: { slug: page.slug },
    props: { page },
  }));
}

type Props = {
  page: CollectionEntry<'legal'>;
};

const { page } = Astro.props;
const { Content } = await page.render();
const { title, lastUpdated, description } = page.data;
---

<Layout title={title} description={description}>
  <main class="min-h-screen bg-radial-dark">
    
    <!-- Hero Section -->
    <section class="hero-section relative overflow-hidden">
      <!-- Animated background elements -->
      <div class="hero-bg absolute inset-0">
        <div class="absolute inset-0 bg-gradient-to-br from-royal-primary/20 via-accent-purple/15 to-accent-cyan/10"></div>
        <div class="floating-orbs">
          <div class="orb orb-1"></div>
          <div class="orb orb-2"></div>
          <div class="orb orb-3"></div>
        </div>
      </div>
      
      <!-- Hero Content -->
      <div class="relative z-10 container mx-auto px-4 py-16 md:py-20">
        <div class="max-w-4xl mx-auto text-center">
          <h1 class="text-4xl md:text-5xl font-heading font-bold text-text-primary mb-4 leading-tight">
            {title}
          </h1>
          {description && (
            <p class="text-lg md:text-xl text-text-secondary max-w-3xl mx-auto leading-relaxed">
              {description}
            </p>
          )}
        </div>
      </div>
    </section>
    
    <!-- Document Content -->
    <section class="content-section relative">
      <div class="container mx-auto px-4 py-16">
        <div class="max-w-4xl mx-auto">
          
          <!-- Content Container -->
          <article class="content-container noise-bg">
            <div class="prose prose-lg max-w-none">
              <Content />
            </div>
            
            <!-- Last Updated Footer -->
            <footer class="content-footer">
              <div class="w-24 h-px bg-royal-primary/30 mx-auto mb-4"></div>
              <p class="text-sm text-text-muted text-center">
                Last updated: {lastUpdated}
              </p>
            </footer>
          </article>
          
          <!-- Navigation -->
          <div class="text-center mt-12">
            <a 
              href="/" 
              class="inline-flex items-center gap-2 text-royal-primary hover:text-royal-secondary transition-colors text-lg"
            >
              <svg width="20" height="20" viewBox="0 0 16 16" fill="currentColor">
                <path d="M8.354 1.146a.5.5 0 0 0-.708 0l-6 6A.5.5 0 0 0 1.5 7.5v7a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 .5-.5v-4h4v4a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.146-.354l-6-6z"/>
              </svg>
              Back to Home
            </a>
          </div>
        </div>
      </div>
    </section>
    
    <Footer />
  </main>
</Layout>

<style>
  /* Hero Section Styling */
  .hero-section {
    min-height: 25vh;
    display: flex;
    align-items: center;
    position: relative;
  }
  
  .hero-bg {
    background: radial-gradient(circle at 20% 80%, rgba(154, 10, 171, 0.3) 0%, transparent 50%),
                radial-gradient(circle at 80% 20%, rgba(196, 90, 219, 0.2) 0%, transparent 50%),
                radial-gradient(circle at 40% 40%, rgba(77, 208, 225, 0.15) 0%, transparent 50%);
  }
  
  /* Floating orbs animation */
  .floating-orbs {
    position: absolute;
    width: 100%;
    height: 100%;
    overflow: hidden;
  }
  
  .orb {
    position: absolute;
    border-radius: 50%;
    opacity: 0.6;
    animation: float 8s ease-in-out infinite;
  }
  
  .orb-1 {
    width: 120px;
    height: 120px;
    background: radial-gradient(circle, rgba(154, 10, 171, 0.4) 0%, transparent 70%);
    top: 20%;
    left: 10%;
    animation-delay: 0s;
  }
  
  .orb-2 {
    width: 80px;
    height: 80px;
    background: radial-gradient(circle, rgba(77, 208, 225, 0.3) 0%, transparent 70%);
    top: 60%;
    right: 15%;
    animation-delay: -3s;
  }
  
  .orb-3 {
    width: 100px;
    height: 100px;
    background: radial-gradient(circle, rgba(196, 90, 219, 0.35) 0%, transparent 70%);
    bottom: 30%;
    left: 70%;
    animation-delay: -6s;
  }
  
  @keyframes float {
    0%, 100% {
      transform: translateY(0px) rotate(0deg);
    }
    33% {
      transform: translateY(-30px) rotate(120deg);
    }
    66% {
      transform: translateY(20px) rotate(240deg);
    }
  }
  
  /* Content Section Styling */
  .content-section {
    background: #1a1a2e;
  }
  
  .content-container {
    background: #2d2d44;
    border-radius: 0;
    padding: 3rem;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
  }
  
  .content-footer {
    margin-top: 3rem;
    padding-top: 2rem;
  }
  
  /* Responsive adjustments */
  @media (max-width: 768px) {
    .hero-section {
      min-height: 20vh;
    }
    
    .content-container {
      padding: 2rem 1.5rem;
    }
    
    .orb-1, .orb-2, .orb-3 {
      display: none; /* Hide orbs on mobile for performance */
    }
  }
  
  
</style>